<project name="br.ufsc.labsec.libcryptosec" default="dist" basedir=".">
    <description>
        Libcryptosec Java Build
    </description>

    <!-- Global Properties -->
    <property name="project" value="libcryptosec-jni" />
    <property name="version" value="1.1.0" />
    <property name="build" value="build" />
    <property name="include" value="include" />
    <property name="dist" value="${project}-${version}" />
    <property name="zipfile" value="${dist}.zip" />
    <property name="lib" value="lib" />

    <path id="classpath">
        <fileset dir="src/br/ufsc/labsec/libcryptosec">
            <include name="**/*.java" />
        </fileset>
    </path>
	<path id="junit.class.path">
    	<pathelement location="/usr/share/ant/lib/ant-junit4.jar"/>
	    	<!--
	    	<fileset dir="${lib}">
	            <include name="*/*.jar"/>
	        </fileset>
	        -->
    </path>
    <!-- Targets -->
    <target name="init">
        <tstamp/>
    </target>

    <!-- Compiles .java files into .class files -->
    <target name="build" depends="init">
        <mkdir dir="${build}" />
        <javac srcdir="src" destdir="${build}" includeantruntime="on">
            <classpath refid="junit.class.path"/>
        </javac>
    </target>

    <!-- Generates headers based on .class files and compile .so -->
    <target name="include" depends="build">
        <mkdir dir="${include}" />
        <!-- Create class list, by joining classpath with comma -->
        <pathconvert property="classlist" refid="classpath" pathsep="," />

        <!-- Class list sanitization, to convert into class names -->
        <exec executable="sed" inputstring="${classlist}" outputproperty="classes">

            <!-- Remove base path from class path list -->
            <arg line='-e "s|${user.dir}/src/||g"' />

            <!-- Remove .java extension from files -->
            <arg line='-e "s|\.java||g"' />

            <!-- Replace slashes with dots -->
            <arg line='-e "s|/|.|g"' />
        </exec>

        <!-- Generate header files from JNI classes -->
        <javah destdir="${include}" classpath="${build}" class="${classes}" />

        <!-- Run cmake && make to build the shared object -->
        <exec executable="cmake" dir="${include}"><arg line="../lib" /></exec>
        <exec executable="make" dir="${include}" />
    </target>

    <!-- Generate distribution directory with jar and lib -->
    <target name="dist" depends="include">
        <delete dir="${dist}" />
        <mkdir dir="${dist}" />

        <!-- Generate jar files, src containing source code and ${project} containing compiled code -->
        <jar jarfile="${dist}/src.jar" basedir="src"
            excludes="**/*.jar, **/*.class, .classpath, .project"
            />
        <jar jarfile="${dist}/${project}.jar" basedir="${build}"
            excludes="**/*.jar, **/*.java, .classpath, .project, build.xml"
            />

        <!-- Copy generated shared object -->
        <copy file="${include}/libcryptosec_jni.so" todir="${dist}" />
    </target>

    <!-- zip distribution directory -->
    <target name="zip" depends="dist">
        <zip zipfile="${zipfile}" basedir="." includes="${dist}/**" />
    </target>

    <!-- Clean leftovers directories.
         This was CAREFULLY CRAFTED not to have any exotic deletion paths.
         Files are only generated on discardable directories for easy cleaning.
         DO NOT HURT THIS MOTTO or I will personally murder your cat. -->
    <target name="clean">
        <delete dir="${build}" quiet="true" />
        <delete dir="${include}" quiet="true" />
        <delete dir="${dist}" quiet="true" />
        <delete file="${zipfile}" quiet="true" />
    </target>
</project>
