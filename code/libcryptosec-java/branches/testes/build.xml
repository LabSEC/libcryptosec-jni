<project name="br.ufsc.labsec.libcryptosec" default="dist" basedir=".">
    <description>
             Libcryptosec Java Build
    </description>
 
    <!-- Global Properties -->
    <property name="src" location="src"/>
	<property name="build" location="bin"/>
    <property name="include" location="LibcryptosecJNI/include"/>
 
    <!-- classpath setup 
    <path id="classpath">
    	<fileset dir="src/br/ufsc/labsec/libcryptosec">
			<include name="**/*.java" />
		</fileset>		
    </path>
 -->
	<target name="javah">
		
		<!-- Certificate -->
		<javah classpath="bin" destdir="${include}/certificate">	
			<class name="br.ufsc.labsec.libcryptosec.certificate.OpensslCertificate" />
			<class name="br.ufsc.labsec.libcryptosec.certificate.OpensslCertificateBuilder" />
		</javah>
				
		<!-- CRL -->
		<javah classpath="bin" destdir="${include}/crl">
			<class name="br.ufsc.labsec.libcryptosec.crl.OpensslCertificateRevocationList" />
			<class name="br.ufsc.labsec.libcryptosec.crl.OpensslCertificateRevocationListBuilder" />
			<class name="br.ufsc.labsec.libcryptosec.crl.OpensslRevokedCertificate" />
		</javah>
		
		<!-- Engine -->
		<javah classpath="bin" destdir="${include}/engine">
			<class name="br.ufsc.labsec.libcryptosec.engine.OpensslDynamicEngine" />
		</javah>
		
		<!-- Keys-->
		<javah classpath="bin" destdir="${include}/keys">
			<class name="br.ufsc.labsec.libcryptosec.keys.OpensslKeyPair" />
			<class name="br.ufsc.labsec.libcryptosec.keys.OpensslPrivateKey" />
			<class name="br.ufsc.labsec.libcryptosec.keys.OpensslPublicKey" />
		</javah>
		
		<!-- Signer -->
		<javah classpath="bin" destdir="${include}/signer">
			<class name="br.ufsc.labsec.libcryptosec.signer.OpensslSigner" />
		</javah>
		
		<!-- x509 -->
		<javah classpath="bin" destdir="${include}/x509">
			<class name="br.ufsc.labsec.libcryptosec.x509.OpensslRdnSequence" />
		</javah>		
		
	</target>
	
    <!-- Targets -->
    <target name="init">
		<tstamp/>
		<pathconvert pathsep=" " property="echo.classpath" refid="classpath"></pathconvert>
		<echo>message="classpath: ${echo.classpath}"</echo>
		<echo>message="class: ${class}"</echo>
    </target>
 
    <target name="compile" depends="init" description="compile the source">
    	<!--javah-->
		<mkdir dir="${include}"/>
		<javah destdir="${include}" class="${class}" classpath="bin"/>
    </target>
 
    <target name="dist" depends="compile" description="generate the distribution" >
       <!--make .so-->
              <exec executable="make" dir="natives" failonerror="true"/>
    </target>
 
    <target name="clean" description="clean up" >
              <!-- Delete the ${build} and ${dist} directory trees -->
              <delete dir="${include}"/>
 
              <!--make .so-->
        <exec executable="make" dir="natives" failonerror="true">
              <arg line="clean"/>
        </exec>
    </target>
</project>